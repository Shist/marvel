{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharListItem/CharListItem.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","View","_jsxs","style","endsWith","objectFit","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharListItem","itemsRefs","onItemClicked","ref","element","current","tabIndex","role","onKeyDown","e","code","preventDefault","CharList","onCharSelected","charsList","setCharsList","newItemsLoading","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charsEnded","setCharsEnded","onRequest","initial","onCharsListLoaded","newCharsList","ended","_toConsumableArray","useRef","TransitionGroup","component","CSSTransition","timeout","classNames","forEach","item","classList","remove","add","focus","disabled","display","Skeleton","_Fragment","comicsArr","index","CharInfo","charId","skeleton","CharSearchForm","chars","setChars","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/4.c6aa2cc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?name=${name}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharactersByName,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../../components/spinner/Spinner\";\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n\n  const { loading, error, clearError, getCharacter } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button\n          className=\"button button__main\"\n          onClick={() => {\n            if (!loading) {\n              updateChar();\n            }\n          }}\n        >\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ char }) => {\n  if (!char) return null;\n\n  const { name, description, thumbnail, homepage, wiki } = char;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={\n          thumbnail?.endsWith(\"image_not_available.jpg\")\n            ? { objectFit: \"contain\" }\n            : null\n        }\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description\n            ? description\n            : \"There is currently no additional information about this character.\"}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charListItem.scss\";\r\n\r\nconst CharListItem = ({ char, itemsRefs, onItemClicked }) => {\r\n  return (\r\n    <li\r\n      className=\"char-list-item\"\r\n      ref={(element) => (itemsRefs.current[char.id] = element)}\r\n      tabIndex=\"0\"\r\n      role=\"button\"\r\n      onClick={onItemClicked}\r\n      onKeyDown={(e) => {\r\n        if (e.code === \"Space\" || e.code === \"Enter\") {\r\n          e.preventDefault();\r\n          onItemClicked();\r\n        }\r\n      }}\r\n    >\r\n      <img\r\n        src={char.thumbnail}\r\n        alt={`character ${char.name}`}\r\n        style={\r\n          char.thumbnail.endsWith(\"image_not_available.jpg\")\r\n            ? { objectFit: \"contain\" }\r\n            : null\r\n        }\r\n      />\r\n      <div className=\"char-list-item__name\">{char.name}</div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CharListItem;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../../components/spinner/Spinner\";\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport CharListItem from \"./CharListItem/CharListItem\";\n\nimport \"./charList.scss\";\nimport \"./CharListItem/charListItem.scss\";\n\nconst CharList = ({ onCharSelected }) => {\n  const [charsList, setCharsList] = useState([]);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charsEnded, setCharsEnded] = useState(false);\n\n  const { loading, error, getAllCharacters } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n    getAllCharacters(offset).then(onCharsListLoaded);\n  };\n\n  const onCharsListLoaded = (newCharsList) => {\n    let ended = false;\n    if (newCharsList.length < 9) {\n      ended = true;\n    }\n\n    setCharsList((charsList) => [...charsList, ...newCharsList]);\n    setNewItemsLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharsEnded(ended);\n  };\n\n  const itemsRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemsRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item-selected\")\n    );\n    itemsRefs.current[id].classList.add(\"char__item-selected\");\n    itemsRefs.current[id].focus();\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemsLoading ? <Spinner /> : null;\n  const content = (\n    <TransitionGroup component={null}>\n      {charsList.map((char) =>\n        char ? (\n          <CSSTransition\n            key={char?.id}\n            timeout={500}\n            classNames=\"char-list-item\"\n          >\n            <CharListItem\n              key={char?.id}\n              char={char}\n              itemsRefs={itemsRefs}\n              onItemClicked={() => {\n                onCharSelected(char?.id);\n                focusOnItem(char?.id);\n              }}\n            />\n          </CSSTransition>\n        ) : null\n      )}\n    </TransitionGroup>\n  );\n\n  return (\n    <div className=\"char__list\">\n      {errorMessage}\n      {spinner}\n      <ul className=\"char__grid\">{content}</ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemsLoading}\n        style={{ display: charsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset, false)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../../components/skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = ({ charId }) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const { loading, error, clearError, getCharacter } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [charId]);\r\n\r\n  const updateChar = () => {\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n  const comicsArr = comics.map((item, index) => {\r\n    return index < 10 ? (\r\n      <li className=\"char__comics-item\" key={index}>\r\n        {item.name}\r\n      </li>\r\n    ) : null;\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img\r\n          src={thumbnail}\r\n          alt={name}\r\n          style={\r\n            thumbnail.endsWith(\"image_not_available.jpg\")\r\n              ? { objectFit: \"contain\" }\r\n              : null\r\n          }\r\n        />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comicsArr.length\r\n          ? comicsArr\r\n          : \"There are no any comics with this character\"}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [chars, setChars] = useState(null);\r\n\r\n  const { loading, error, clearError, getCharactersByName } =\r\n    useMarvelService();\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\"char__search-critical-error\">\r\n      <ErrorMessage />\r\n    </div>\r\n  ) : null;\r\n  const results = !chars ? null : chars.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {chars[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${chars[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{ charName: \"\" }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          clearError();\r\n          getCharactersByName(charName).then((chars) => setChars(chars));\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button__main\"\r\n              disabled={loading}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport CharSearchForm from \"../components/charSearchForm/CharSearchForm\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}