{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","pages/SignelComicPage/SingleComicPage.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComic","getComic","_ref4","_callee4","_context4","_x2","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","children","avengers","avengersLogo","View","Link","to","SingleComicPage","comicId","useParams","setComic","_useMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"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","file":"static/js/5.3b3fdae4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\r\nimport AppBanner from \"../../components/appBanner/AppBanner\";\r\n\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { loading, error, clearError, getComic } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { title, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"sourceRoot":""}