{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","pages/SinglePageTemplate.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","SinglePageTemplate","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded","console","error"],"mappings":"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","file":"static/js/8.c40c50a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?name=${name}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharactersByName,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../services/MarvelService\";\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport setContent from \"../utils/setContent\";\r\n\r\nconst SinglePageTemplate = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const { clearError, getComic, getCharacter, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComic(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmed\"));\r\n        break;\r\n      case \"character\":\r\n        getCharacter(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmed\"));\r\n        break;\r\n      default:\r\n        console.error(`Unexpected dataType inside switch!`);\r\n    }\r\n  };\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {setContent(process, Component, data)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePageTemplate;\r\n"],"sourceRoot":""}