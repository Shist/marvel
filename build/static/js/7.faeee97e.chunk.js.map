{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsListItem/ComicsListItem.js","components/comicsList/ComicsList.js","pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","avengers","avengersLogo","ComicsListItem","Link","to","setContent","newItemsLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","content","TransitionGroup","component","comicsItem","index","CSSTransition","timeout","classNames","disabled","style","display","onClick","comicsPage","_Fragment","Helmet"],"mappings":"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","file":"static/js/7.faeee97e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?name=${name}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharactersByName,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./comicsListItem.scss\";\r\n\r\nconst ComicsListItem = ({ comics }) => {\r\n  return (\r\n    <li className=\"comics-list-item\">\r\n      <Link to={`/comics/${comics.id}`}>\r\n        <img\r\n          src={comics.thumbnail}\r\n          alt={comics.title}\r\n          className=\"comics-list-item__img\"\r\n        />\r\n        <div className=\"comics-list-item__name\">{comics.title}</div>\r\n        <div className=\"comics-list-item__price\">{comics.price}</div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ComicsListItem;\r\n","import { useState, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Spinner from \"../../components/spinner/Spinner\";\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ComicsListItem from \"./ComicsListItem/ComicsListItem\";\n\nimport \"./comicsList.scss\";\nimport \"./ComicsListItem/comicsListItem.scss\";\n\nconst setContent = (process, Component, newItemsLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemsLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemsLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const content = (\n    <ul className=\"comics__grid\">\n      <TransitionGroup component={null}>\n        {comicsList.map((comicsItem, index) => {\n          return comicsItem ? (\n            <CSSTransition\n              key={index}\n              timeout={500}\n              classNames=\"comics-list-item\"\n            >\n              <ComicsListItem comics={comicsItem} key={index} />\n            </CSSTransition>\n          ) : null;\n        })}\n      </TransitionGroup>\n    </ul>\n  );\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => content, newItemsLoading)}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemsLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset, false)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nconst comicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of marvel comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default comicsPage;\r\n"],"sourceRoot":""}