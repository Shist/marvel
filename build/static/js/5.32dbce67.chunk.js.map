{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharListItem/CharListItem.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","setContent","Component","Spinner","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","View","style","endsWith","objectFit","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharListItem","itemsRefs","onItemClicked","ref","element","current","tabIndex","role","onKeyDown","e","code","preventDefault","CharList","onCharSelected","charsList","setCharsList","_useState3","_useState4","newItemsLoading","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charsEnded","setCharsEnded","onRequest","initial","onCharsListLoaded","newCharsList","ended","_toConsumableArray","useRef","content","TransitionGroup","component","appear","CSSTransition","timeout","classNames","forEach","item","classList","remove","add","focus","elements","useMemo","disabled","display","comicsArr","index","CharInfo","charId","CharSearchForm","chars","setChars","errorMessage","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","Helmet","decoration"],"mappings":"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","file":"static/js/5.32dbce67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?name=${name}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharactersByName,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setProcess(\"loading\");\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n      } catch (e) {\r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n\n  const { clearError, getCharacter, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button\n          className=\"button button__main\"\n          onClick={() => {\n            if (process !== \"loading\") {\n              updateChar();\n            }\n          }}\n        >\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ data }) => {\n  if (!data) return null;\n\n  const { name, description, thumbnail, homepage, wiki } = data;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={\n          thumbnail?.endsWith(\"image_not_available.jpg\")\n            ? { objectFit: \"contain\" }\n            : null\n        }\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description\n            ? description\n            : \"There is currently no additional information about this character.\"}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charListItem.scss\";\r\n\r\nconst CharListItem = ({ char, itemsRefs, onItemClicked }) => {\r\n  return (\r\n    <li\r\n      className=\"char-list-item\"\r\n      ref={(element) => (itemsRefs.current[char.id] = element)}\r\n      tabIndex=\"0\"\r\n      role=\"button\"\r\n      onClick={onItemClicked}\r\n      onKeyDown={(e) => {\r\n        if (e.code === \"Space\" || e.code === \"Enter\") {\r\n          e.preventDefault();\r\n          onItemClicked();\r\n        }\r\n      }}\r\n    >\r\n      <img\r\n        src={char.thumbnail}\r\n        alt={`character ${char.name}`}\r\n        style={\r\n          char.thumbnail.endsWith(\"image_not_available.jpg\")\r\n            ? { objectFit: \"contain\" }\r\n            : null\r\n        }\r\n      />\r\n      <div className=\"char-list-item__name\">{char.name}</div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CharListItem;\r\n","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport CharListItem from \"./CharListItem/CharListItem\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./charList.scss\";\nimport \"./CharListItem/charListItem.scss\";\n\nconst setContent = (process, Component, newItemsLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemsLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst CharList = ({ onCharSelected }) => {\n  const [charsList, setCharsList] = useState([]);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charsEnded, setCharsEnded] = useState(false);\n\n  const { getAllCharacters, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n    getAllCharacters(offset)\n      .then(onCharsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharsListLoaded = (newCharsList) => {\n    let ended = false;\n    if (newCharsList.length < 9) {\n      ended = true;\n    }\n\n    setCharsList((charsList) => [...charsList, ...newCharsList]);\n    setNewItemsLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharsEnded(ended);\n  };\n\n  const itemsRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemsRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item-selected\")\n    );\n    itemsRefs.current[id].classList.add(\"char__item-selected\");\n    itemsRefs.current[id].focus();\n  };\n\n  const content = (\n    <ul className=\"char__grid\">\n      <TransitionGroup component={null} appear={!newItemsLoading}>\n        {charsList.map((char) =>\n          char ? (\n            <CSSTransition\n              key={char?.id}\n              timeout={500}\n              classNames=\"char-list-item\"\n            >\n              <CharListItem\n                key={char?.id}\n                char={char}\n                itemsRefs={itemsRefs}\n                onItemClicked={() => {\n                  onCharSelected(char?.id);\n                  focusOnItem(char?.id);\n                }}\n              />\n            </CSSTransition>\n          ) : null\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n\n  const elements = useMemo(() => {\n    return setContent(process, () => content, newItemsLoading);\n  }, [process]);\n\n  return (\n    <div className=\"char__list\">\n      {elements}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemsLoading}\n        style={{ display: charsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset, false)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = ({ charId }) => {\r\n  const [char, setChar] = useState(null);\r\n\r\n  const { clearError, getCharacter, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [charId]);\r\n\r\n  const updateChar = () => {\r\n    if (!charId) {\r\n      return;\r\n    }\r\n    clearError();\r\n    getCharacter(charId)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\r\n};\r\n\r\nconst View = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\r\n  const comicsArr = comics.map((item, index) => {\r\n    return index < 10 ? (\r\n      <li className=\"char__comics-item\" key={index}>\r\n        {item.name}\r\n      </li>\r\n    ) : null;\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img\r\n          src={thumbnail}\r\n          alt={name}\r\n          style={\r\n            thumbnail.endsWith(\"image_not_available.jpg\")\r\n              ? { objectFit: \"contain\" }\r\n              : null\r\n          }\r\n        />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comicsArr.length\r\n          ? comicsArr\r\n          : \"There are no any comics with this character\"}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [chars, setChars] = useState(null);\r\n\r\n  const { clearError, getCharactersByName, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  const errorMessage =\r\n    process === \"error\" ? (\r\n      <div className=\"char__search-critical-error\">\r\n        <ErrorMessage />\r\n      </div>\r\n    ) : null;\r\n  const results = !chars ? null : chars.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {chars[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${chars[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{ charName: \"\" }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          clearError();\r\n          getCharactersByName(charName)\r\n            .then((chars) => setChars(chars))\r\n            .then(() => setProcess(\"confirmed\"));\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button__main\"\r\n              disabled={process === \"loading\"}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport CharSearchForm from \"../components/charSearchForm/CharSearchForm\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel information portal\" />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}