{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsListItem/ComicsListItem.js","components/comicsList/ComicsList.js","pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","errorImg","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","result","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharactersByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","avengers","avengersLogo","ComicsListItem","Link","to","ComicsList","comicsList","setComicsList","newItemsLoading","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","errorMessage","spinner","Spinner","content","TransitionGroup","component","comicsItem","index","CSSTransition","timeout","classNames","disabled","style","display","onClick","comicsPage","_Fragment"],"mappings":"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","file":"static/js/6.8615d64b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from \"./error.gif\";\r\n\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <img src={errorImg} alt=\"Error\" className=\"error-msg\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=b590e2183035d8a341bf24ada146846a\";\r\n  const _baseCharactersOffset = 210;\r\n  const _baseComicsOffset = 0;\r\n\r\n  const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const result = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(result.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const result = await request(\r\n      `${_apiBase}characters?name=${name}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (offset = _baseComicsOffset) => {\r\n    const result = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return result.data.results.map(_transformComic);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const result = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(result.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].wiki,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      title: comic.title,\r\n      description:\r\n        comic.description || \"There is no description about this comics yet\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : `There is no info about number of pages of that comics`,\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `${comic.prices[0].price}$`\r\n        : \"Not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharactersByName,\r\n    getComic,\r\n    getAllComics,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./comicsListItem.scss\";\r\n\r\nconst ComicsListItem = ({ comics }) => {\r\n  return (\r\n    <li className=\"comics-list-item\">\r\n      <Link to={`/comics/${comics.id}`}>\r\n        <img\r\n          src={comics.thumbnail}\r\n          alt={comics.title}\r\n          className=\"comics-list-item__img\"\r\n        />\r\n        <div className=\"comics-list-item__name\">{comics.title}</div>\r\n        <div className=\"comics-list-item__price\">{comics.price}</div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ComicsListItem;\r\n","import { useState, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Spinner from \"../../components/spinner/Spinner\";\nimport ErrorMessage from \"../../components/errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport ComicsListItem from \"./ComicsListItem/ComicsListItem\";\n\nimport \"./comicsList.scss\";\nimport \"./ComicsListItem/comicsListItem.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemsLoading, setNewItemsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemsLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemsLoading ? <Spinner /> : null;\n  const content = (\n    <TransitionGroup component={null}>\n      {comicsList.map((comicsItem, index) => {\n        return comicsItem ? (\n          <CSSTransition\n            key={index}\n            timeout={500}\n            classNames=\"comics-list-item\"\n          >\n            <ComicsListItem comics={comicsItem} key={index} />\n          </CSSTransition>\n        ) : null;\n      })}\n    </TransitionGroup>\n  );\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      <ul className=\"comics__grid\">{content}</ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemsLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset, false)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import ComicsList from \"../components/comicsList/ComicsList\";\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\n\r\nconst comicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default comicsPage;\r\n"],"sourceRoot":""}